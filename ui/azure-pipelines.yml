trigger:
 paths:
   include:
     - ui
 branches:
   include:
     - main

pr:
  branches:
    include:
      - main
  
variables:
    system.debug: true

pool:
  vmImage: 'ubuntu-latest'

resources:
  repositories:
    - repository: templates
      type: github
      name: ECFMG/azure-pipelines-yaml
      ref: 'refs/heads/main'
      endpoint: 'simnova (1)'

stages:
- stage: build_stage
  displayName: Build Stage
  jobs:
  - job: build_job
    displayName: Build Job
    steps:
    - task: SonarCloudPrepare@1
      displayName: 'SonarCloud: Prepare analysis configuration'
      inputs:
        SonarCloud: 'sonarcloud'
        organization: 'simnova'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'sharethrift-ui'
        cliProjectName: 'sharethrift-ui'
        cliSources: './ui/src'
    - template: ./templates/cra-npm-build.yml@templates
      parameters:
        buildPath: 'ui'
        archivePath: 'ui/build'
        archiveName: 'prod'
        buildEnvSettings:
          INLINE_RUNTIME_CHUNK: 'false'
          REACT_APP_AAD_APP_CLIENTID: $(REACT_APP_AAD_APP_CLIENTID)
          REACT_APP_AAD_DIRECTORY_TENANTID: $(REACT_APP_AAD_DIRECTORY_TENANTID)
          REACT_APP_AAD_REDIRECT_URI: $(REACT_APP_AAD_REDIRECT_URI)
          REACT_APP_AAD_SCOPES: $(REACT_APP_AAD_SCOPES)
    - task: SonarCloudAnalyze@1
      displayName: 'SonarCloud: Run analysis'
    - task: SonarCloudPublish@1
      displayName: 'SounarCloud: Publish results on build summary'
      inputs:
        pollingTimeoutSec: '300'
    - task: PublishBuildArtifacts@1
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'www'
        publishLocation: 'Container'

- stage: deploy_qa_stage
  dependsOn: build_stage
  displayName: Deploy QA Stage
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  jobs:
  - deployment: deploy_qa_job
    displayName: Deploy QA Job
    environment: verify-cs-qa
    strategy:
      runOnce:    #rolling, canary are the other strategies that are supported
        deploy:
          steps:
          - template: ./templates/blob-cdn-website-deploy.yml@templates
            parameters:
              subscription: $(azureSubscription)
              destinationBlobContainer: 'sharethriftqa'
              archiveName: 'prod'
              cdnProfile: 'sharethrift'
              cdnResourceGroup: 'rg-sharethrift'
              cdnName: 'sharethriftqa'

- stage: deploy_prod_stage
  dependsOn: deploy_qa_stage
  displayName: Deploy Prod Stage
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  jobs:
  - deployment: deploy_prod_job
    displayName: Deploy Prod Job
    environment: verify-cs-prod
    strategy:
      runOnce:    #rolling, canary are the other strategies that are supported
        deploy:
          steps:
          - template: ./build-pipeline/deploy.yml
            parameters:
              subscription: $(azureSubscription)
              destinationBlobContainer: 'sharethrift'
              archiveName: 'prod'
              cdnProfile: 'sharethrift'
              cdnResourceGroup: 'rg-sharethrift'
              cdnName: 'sharethrift'