# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
 paths:
   include:
     - ui
 branches:
   include:
     - main

pr: none
  
variables:
    system.debug: true

pool:
  vmImage: 'ubuntu-latest'

#steps:
#- task: NodeTool@0
#  inputs:
#    versionSpec: '12.x'
#  displayName: 'Install Node.js'

#- script: |
#    npm install
#    npm run build
#  displayName: 'npm install and build'
#  workingDirectory: ui
#  env:
#    INLINE_RUNTIME_CHUNK: false
#    REACT_APP_AAD_APP_CLIENTID: $(REACT_APP_AAD_APP_CLIENTID)
#    REACT_APP_AAD_DIRECTORY_TENANTID: $(REACT_APP_AAD_DIRECTORY_TENANTID)
#    REACT_APP_AAD_REDIRECT_URI: $(REACT_APP_AAD_REDIRECT_URI)
#    REACT_APP_AAD_SCOPES: $(REACT_APP_AAD_SCOPES)


stages:
- stage: build_stage
  displayName: Build Stage
  jobs:
  - job: build_job
    displayName: Build Job
    steps:
    - template: ./build-pipeline/npm-build.yml
      parameters:
        buildPath: 'ui'
        archivePath: 'ui/build'
        archiveName: 'prod'
        buildEnvSettings:
          INLINE_RUNTIME_CHUNK: false
          REACT_APP_AAD_APP_CLIENTID: $(REACT_APP_AAD_APP_CLIENTID)
          REACT_APP_AAD_DIRECTORY_TENANTID: $(REACT_APP_AAD_DIRECTORY_TENANTID)
          REACT_APP_AAD_REDIRECT_URI: $(REACT_APP_AAD_REDIRECT_URI)
          REACT_APP_AAD_SCOPES: $(REACT_APP_AAD_SCOPES)
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'www'
        publishLocation: 'Container'

- stage: deploy_qa_stage
  dependsOn: build_stage
  displayName: Deploy QA Stage
  jobs:
  - deployment: deploy_qa_job
    displayName: Deploy QA Job
    environment: ui-qa 
    strategy:
      runOnce:    #rolling, canary are the other strategies that are supported
        deploy:
          steps:
          - template: ./build-pipeline/deploy.yml
            parameters:
              subscription: $(azureSubscription)
              destinationBlobContainer: 'sharethriftqa'
              archiveName: 'prod'
              cdnProfile: 'sharethrift'
              cdnResourceGroup: 'rg-sharethrift'
              cdnName: 'sharethriftqa'

- stage: deploy_prod_stage
  dependsOn: deploy_qa_stage
  displayName: Deploy Prod Stage
  jobs:
  - deployment: deploy_prod_job
    displayName: Deploy Prod Job
    environment: ui-prod
    strategy:
      runOnce:    #rolling, canary are the other strategies that are supported
        deploy:
          steps:
          - template: ./build-pipeline/deploy.yml
            parameters:
              subscription: $(azureSubscription)
              destinationBlobContainer: 'sharethrift'
              archiveName: 'prod'
              cdnProfile: 'sharethrift'
              cdnResourceGroup: 'rg-sharethrift'
              cdnName: 'sharethrift'

#- template: ./build-pipeline/deploy.yml
##  parameters:
##    subscription: $(azureSubscription)
#    destinationBlobContainer: 'sharethrift'
#    cdnProfile: 'sharethrift'
#    cdnResourceGroup: 'rg-sharethrift'
#    cdnName: 'sharethrift'




#    azureSubscription: 'Visual Studio Enterprise(1e23aa72-fb0d-424b-a48c-0de4916aee72)'
#- task: AzureCLI@2
#  displayName: Copy to Blob
#  inputs:
#    azureSubscription: $(azureSubscription)
#    scriptType: 'pscore'
#    scriptLocation: 'inlineScript'
#    inlineScript: |
#      az storage blob upload-batch --destination `$web --account-name sharethrift --source . --auth-mode login
#      az cdn endpoint purge --profile-name sharethrift -g rg-sharethrift -n sharethrift --content-paths "/*"
#    addSpnToEnvironment: true
#    workingDirectory: 'ui/build'